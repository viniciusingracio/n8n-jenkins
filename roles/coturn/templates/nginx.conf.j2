user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    server {
        listen   80;
        listen [::]:80;
        server_name {{ inventory_hostname }};
        listen 443 ssl;
        listen [::]:443 ssl;
        ssl_certificate /etc/nginx/ssl/{{ coturn_ssl_certificate | basename }};
        ssl_certificate_key /etc/nginx/ssl/{{ coturn_ssl_certificate_key | basename }};
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        # need TLSv1 for the Java calls for the API, otherwise it would be removed
        # ssl_protocols TLSv1.2;
        # https://www.acunetix.com/blog/articles/tls-ssl-cipher-hardening/
        # ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
        ssl_prefer_server_ciphers on;
        ssl_dhparam /etc/nginx/ssl/dhp-2048.pem;
        ssl_ecdh_curve secp384r1; # Requires nginx >= 1.1.0
        ssl_session_tickets off; # Requires nginx >= 1.5.9
        ssl_stapling on; # Requires nginx >= 1.3.7
        ssl_stapling_verify on; # Requires nginx => 1.3.7
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload";

        location /metrics {
            proxy_pass         http://{{ docker_ip }}:9100;
            proxy_redirect     default;
            proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header   X-Real-IP         $remote_addr;
            proxy_set_header   Host              $http_host;
            proxy_set_header   X-NginX-Proxy     true;

            auth_basic           "Administrator's area";
            auth_basic_user_file /etc/apache2/prometheus.htpasswd;
        }

        location /mtail_metrics {
            rewrite /mtail_metrics /metrics  break;
            proxy_pass         http://mtail:3903;
            proxy_redirect     default;
            proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header   X-Real-IP         $remote_addr;
            proxy_set_header   Host              $http_host;
            proxy_set_header   X-NginX-Proxy     true;

            auth_basic           "Administrator's area";
            auth_basic_user_file /etc/apache2/prometheus.htpasswd;
        }
    }
}
