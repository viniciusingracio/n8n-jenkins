---

- name: Install dependencies
  become: yes
  apt:
    name:
      - sqlite
      - redis-server
      - build-essential
      - libssl-dev
      - libsqlite3-dev
      - libevent-dev
      - libpq-dev
      - mysql-client
      - libmysqlclient-dev
      - libhiredis-dev
    state: present

- name: Download and extract
  become: yes
  unarchive:
    src: https://github.com/coturn/coturn/archive/{{ coturn_version }}.tar.gz
    dest: /usr/local/src
    remote_src: True
  when: coturn_build_from_source

- name: Configure
  become: yes
  command: ./configure
  args:
    chdir: /usr/local/src/coturn-{{ coturn_version }}
  when: coturn_build_from_source

- name: Build
  become: yes
  make:
    chdir: /usr/local/src/coturn-{{ coturn_version }}
    target: '{{ item.target }}'
  with_items:
    - target: all
    - target: install
  when: coturn_build_from_source

- name: Copy systemd file
  become: yes
  copy:
    src: files/coturn.service
    dest: /etc/systemd/system/coturn.service
  notify:
    - reload systemctl
    - restart coturn

- include: ssl.yml
  when: coturn_ssl_enabled

- name: Determine external IP
  set_fact:
    external_ip: "{{ lookup('pipe', 'dig {{ coturn_domain_name }} @8.8.8.8 A +short | grep \"[0-9]*\\.[0-9]*\\.[0-9]*\\.[0-9]*\" | head -n 1') }}"
  when: external_ip is undefined

- name: Copy templates
  become: yes
  template:
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
    mode: 0644
  with_items:
    - { src: templates/turnserver.conf.j2, dest: /etc/turnserver.conf }
    - { src: templates/coturn.j2, dest: /etc/default/coturn }
  notify: restart coturn

- name: Enable coturn service
  become: yes
  service:
    name: coturn
    state: started
    enabled: yes

- include: ufw.yml
  when: common_ufw_enabled
  tags: [ufw,firewall]
