- git:
    repo: git@github.com:mconftec/kurento-apps.git
    dest: '{{ ansible_env.HOME }}/dev/kurento-apps'
    accept_hostkey: true
    update: false

# TODO extract environment to specific file
- name: Update npm
  become: yes
  command: npm install npm -g
  environment:
    PATH: '/opt/node-v{{ node_version }}-linux-x64/bin:{{ ansible_env.PATH }}'

- name: Install node dependencies for kurento-apps
  npm:
    path: '{{ ansible_env.HOME }}/dev/kurento-apps'
  environment:
    PATH: '/opt/node-v{{ node_version }}-linux-x64/bin:{{ ansible_env.PATH }}'

- name: Install global dependencies for kurento-apps
  become: yes
  npm:
    name: '{{ item }}'
    global: yes
  with_items:
    - grunt-cli
    - babel-cli
  environment:
    PATH: '/opt/node-v{{ node_version }}-linux-x64/bin:{{ ansible_env.PATH }}'

- template:
    src: files/kurento-apps/default.json.j2
    dest: '{{ ansible_env.HOME }}/dev/kurento-apps/config/default.json'
    mode: '0644'
    backup: yes
  tags: [kurento-apps-conf]

- name: Compile assets
  command: grunt
  args:
    chdir: '{{ ansible_env.HOME }}/dev/kurento-apps'
  environment:
    PATH: '/opt/node-v{{ node_version }}-linux-x64/bin:{{ ansible_env.PATH }}'

- template:
    src: files/kurento-apps/kurento-apps.upstart.j2
    dest: /etc/init/kurento-apps.conf
    mode: 0644
  become: yes

- file:
    path: "/usr/local/bin/slack"
    state: directory
    mode: 0755
  become: yes

- name: Deploy scripts for kurento-apps cronjob
  command: 'cp {{ ansible_env.HOME }}/dev/kurento-apps/{{ item.src }} {{ item.dest }}'
  become: yes
  with_items:
    - { src: 'config/slack/slack.sh', dest: '/usr/local/bin/' }
    - { src: 'config/slack/run-report.sh', dest: '/usr/local/bin/slack/' }

- name: Adjust kurento-apps cronjob scripts permissions
  file:
    path: '{{ item }}'
    mode: 0755
    remote_src: true
  become: yes
  with_items:
    - /usr/local/bin/slack.sh
    - /usr/local/bin/slack/run-report.sh

# TODO fix python3
# - name: Deploy scripts for kurento-apps cronjob
#   copy:
#     src: '{{ ansible_env.HOME }}/dev/kurento-apps/{{ item.src }}'
#     dest: '{{ item.dest }}'
#     mode: 0755
#     remote_src: True
#   become: yes
#   with_items:
#     - { src: 'config/slack/slack.sh', dest: '/usr/local/bin/' }
#     # - { src: 'config/slack/run-report.sh', dest: '/usr/local/bin/slack/' }

# TODO fix python3
# - copy:
#     src: '{{ ansible_env.HOME }}/dev/kurento-apps/config/monit/{{ item }}'
#     dest: '/etc/monit/conf.d/'
#     mode: '0644'
#     remote_src: true
# - name: Copy monit files
#   command: 'cp {{ ansible_env.HOME }}/dev/kurento-apps/config/monit/{{ item }} /etc/monit/conf.d/'
#   become: yes
#   notify: restart monit
#   with_items:
#     - kurento-apps.conf
#     - kurento-media-server.conf
#     - redis.conf

# TODO fix kurento-apps.conf so we don't need to host the monit files on ansihub
- copy:
    src: 'files/monit/{{ item }}'
    dest: '/etc/monit/conf.d/'
    mode: '0644'
  become: yes
  notify: restart monit
  with_items:
    - kurento-apps.conf
    - kurento-media-server.conf
    - redis.conf

- cron:
    name: "Report"
    minute: "55"
    hour: "1"
    job: "/usr/local/bin/slack/run-report.sh"

- cron:
    name: "Restart kurento-apps"
    minute: "58"
    hour: "1"
    job: "/usr/sbin/service kurento-apps stop"

- file:
    path: '{{ item }}'
    state: absent
  with_items:
    - '{{ ansible_env.HOME }}/dev/kurento-apps/sslcert/server.crt'
    - '{{ ansible_env.HOME }}/dev/kurento-apps/sslcert/server.key'

- file:
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
    state: link
  with_items:
    - { src: '{{ ssl_certificate }}', dest: '{{ ansible_env.HOME }}/dev/kurento-apps/sslcert/server.crt' }
    - { src: '{{ ssl_certificate_key }}', dest: '{{ ansible_env.HOME }}/dev/kurento-apps/sslcert/server.key' }
