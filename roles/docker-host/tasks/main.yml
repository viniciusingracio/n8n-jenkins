- name: Add docker gpg key
  become: true
  apt_key:
    url: "https://download.docker.com/linux/ubuntu/gpg"
    state: present

- name: Add docker apt repository
  become: true
  apt_repository:
    repo: 'deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable'
    state: present

- name: Update apt
  become: true
  apt: update_cache=yes

- name: Install docker package
  become: true
  apt:
    name: docker-ce
    state: present

# Need pip and docker-py to manage this docker instance with ansible
# pip is now installed on setup.yml
- name: Install docker-py
  become: true
  pip:
    name: docker-py
    state: present

- name: Add user to docker group
  become: true
  user:
    name: '{{ deploy_user }}'
    groups: docker
    append: yes
  register: reg_docker

# after installing docker, the docker command doesn't work within the current ssh session,
# so we need to quit and log again
# https://github.com/ansible/ansible-modules-core/issues/921#issuecomment-220513111
- name: Reset SSH
  shell: sleep 1; pkill -u {{ ansible_ssh_user }} sshd
  async: 3
  poll: 2
  when: reg_docker|changed

- name: Load local docker authentication variables
  include_vars:
    file: .docker-auth
    name: docker_auth
  ignore_errors: yes

- name: Log into docker registry
  shell: "docker login --username '{{ docker_auth.user }}' --password '{{ docker_auth.password }}'"
  notify: docker logout
  when: docker_auth is defined
  # TODO: can't use docker_login yet because it breaks with python3
  # docker_login:
  #   # registry: '{{ docker_auth.registry }}'
  #   username: '{{ docker_auth.user }}'
  #   password: '{{ docker_auth.password }}'
  #   email: '{{ docker_auth.email }}'
  #   reauthorize: yes
