- name: Download rec-proxy source code
  git:
    repo: '{{ rec_proxy_repo_url }}'
    dest: ~/src/rec-proxy
    version: '{{ rec_proxy_repo_ref }}'
    # depth: 1 # can't use it otherwise won't update the code
    accept_hostkey: true
    force: yes
  when: rec_proxy_build_from_source
  register: rec_proxy_code

- name: Build the rec-proxy docker image
  docker_image:
    build_path: ~/src/rec-proxy/
    name: '{{ rec_proxy_image }}'
    tag: '{{ rec_proxy_image_version }}'
    force: true
  when: rec_proxy_build_from_source and rec_proxy_code.changed

- name: Create directory for nginx cache
  file:
    path: /var/cache/nginx
    recurse: yes
    state: directory
  become: yes

- name: Determine default volumes for the container
  set_fact:
    container_volumes:
      - /var/www:/usr/local/openresty/nginx/html # for certbot --webroot and static pages
      - '{{ rec_proxy_certs_path_root }}:{{ rec_proxy_certs_path_root }}'
      - /var/cache/nginx:/var/cache/nginx

- name: Include playback volume
  set_fact:
    container_volumes: '{{ container_volumes + [ "/var/bigbluebutton:/var/bigbluebutton" ] }}'
  when: rec_proxy_local_playback

- name: Determine ports
  set_fact:
    rec_proxy_ports: '{% if rec_proxy_local_playback %}[ "{{ rec_proxy_http_port }}:80" ]{% else %}[ "80:80", "443:443" ]{% endif %}'

- name: Start the rec-proxy container
  docker_container:
    name: mconf-rec-proxy
    image: '{{ rec_proxy_image }}:{{ rec_proxy_image_version }}'
    # TODO do it only when not rec_proxy_build_from_source
    pull: yes
    restart_policy: unless-stopped
    volumes: '{{ container_volumes }}'
    published_ports: '{{ rec_proxy_ports }}'
    env:
      APP_HOST: '{{ rec_proxy_app_host }}'
      CERTS_PATH: '{{ rec_proxy_certs_path }}'
      MEDIA_HOST: '{{ rec_proxy_media_host }}'
      MEDIA_PROTOCOL: '{{ rec_proxy_media_protocol }}'
      S3_BUCKET: '{{ rec_proxy_s3_bucket }}'
      S3_ACCESS_KEY_ID: '{{ rec_proxy_s3_access_key_id }}'
      S3_SECRET: '{{ rec_proxy_s3_secret }}'
      S3_REGION: '{{ rec_proxy_s3_region }}'
      S3_EXPIRATION_TIME: '{{ rec_proxy_s3_expiration_time }}'
      API_SECRET: '{{ rec_proxy_api_secret }}'
      JWT_SECRET: '{{ rec_proxy_jwt_secret }}'
      REDIRECT_UNAUTHORIZED: '{{ rec_proxy_redirect_unauthorized }}'
      CACHE_NUM_KEYS: '{{ rec_proxy_cache_num_keys }}'
      CACHE_EXPIRE_AFTER: '{{ rec_proxy_cache_expire_after }}'
      CACHE_MAX_SIZE: '{{ rec_proxy_cache_max_size }}'
    labels:
      hostname: '{{ inventory_hostname }}'
  notify: clean docker
