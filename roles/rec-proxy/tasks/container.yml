- name: Download rec-proxy source code
  git:
    repo: '{{ rec_proxy_repo_url }}'
    dest: ~/src/rec-proxy
    version: '{{ rec_proxy_repo_ref }}'
    # depth: 1 # can't use it otherwise won't update the code
    accept_hostkey: true
    force: yes
  when: rec_proxy_build_from_source
  register: rec_proxy_code

# TODO: remove old images
- name: Build the rec-proxy docker image
  docker_image:
    build_path: ~/src/rec-proxy/
    name: '{{ rec_proxy_image }}'
    tag: '{{ rec_proxy_image_version }}'
    force: true
  when: rec_proxy_build_from_source and rec_proxy_code.changed

- name: Start the rec-proxy container
  docker_container:
    name: mconf-rec-proxy
    image: '{{ rec_proxy_image }}:{{ rec_proxy_image_version }}'
    restart_policy: unless-stopped
    volumes:
      - /var/www:/usr/local/openresty/nginx/html # for certbot --webroot and static pages
      - '{{ rec_proxy_certs_path_root }}:{{ rec_proxy_certs_path_root }}'
    published_ports:
      - 80:80
      - 443:443
    env:
      APP_HOST: '{{ rec_proxy_app_host }}'
      CERTS_PATH: '{{ rec_proxy_certs_path }}'
      MEDIA_HOST: '{{ rec_proxy_media_host }}'
      MEDIA_PROTOCOL: '{{ rec_proxy_media_protocol }}'
      S3_BUCKET: '{{ rec_proxy_s3_bucket }}'
