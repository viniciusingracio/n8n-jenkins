- name: Copy dummy package for bbb-webrtc-sfu to /tmp
  copy:
    src: files/bbb-webrtc-sfu_1.0_all.deb
    dest: /tmp/bbb-webrtc-sfu_1.0_all.deb

- name: Install dummy package
  apt:
    deb: /tmp/bbb-webrtc-sfu_1.0_all.deb
    force: yes
  become: yes

- name: Hold package
  command: apt-mark hold bbb-webrtc-sfu
  become: yes

- name: Hold package (with aptitude)
  command: aptitude -y hold bbb-webrtc-sfu
  become: yes

- name: Hold package (with dpkg)
  dpkg_selections:
    name: bbb-webrtc-sfu
    selection: hold
  become: yes

- name: Install node (webrtc-sfu dependency, set to automatic)
  apt:
    name: nodejs
    state: latest
  become: yes

- name: Pull streaming image
  docker_image:
    name: mconf/mconf-presentation-recorder:latest

- name:
  become: yes
  copy:
    content: '{{ bigbluebutton_streaming_secret }}'
    dest: /usr/local/bigbluebutton/bbb-webrtc-sfu/config/client_secret.json

- name:
  set_fact:
    sfu_processes: "{{ sfu_processes|default([]) + [ { 'path': item } ] }}"
  with_items:
    - ./lib/mcs-core/process.js
    - ./lib/screenshare/ScreenshareProcess
    - ./lib/video/VideoProcess.js
    - ./lib/audio/AudioProcess.js
- name:
  set_fact:
    sfu_processes: "{{ sfu_processes|default([]) + [ { 'path': item } ] }}"
  with_items:
    - ./lib/stream/StreamProcess.js
  when: bigbluebutton_streaming_enabled

- name:
  set_fact:
    codec_main: VP8
    codec_content: VP8
    recording_profile: WEBM_VIDEO_ONLY
    recording_format: webm
  when: bigbluebutton_docker_webrtc_sfu_codec == 'VP8'
- name:
  set_fact:
    codec_main: H264
    codec_content: H264
    recording_profile: MKV_VIDEO_ONLY
    recording_format: mkv
  when: bigbluebutton_docker_webrtc_sfu_codec != 'VP8'

- name: Start webrtc-sfu container
  docker_container:
    name: webrtc-sfu
    image: '{{ bigbluebutton_docker_webrtc_sfu_image }}'
    pull: yes
    restart_policy: unless-stopped
    ports:
      - 3008:3008
      - 3009:3009
      - 3010:8009
    env:
      KURENTO: '{{ kurento_config | to_json }}'
      REDIS_HOST: '{{ docker_ip }}'
      MCS_PORT: "3009"
      MCS_HOST: '{{ docker_ip }}'
      FREESWITCH_IP: '{{ ansible_default_ipv4.address }}'
      ESL_IP: '{{ docker_ip }}'
      ESL_PORT: "8021"
      LOG_LEVEL: info
      STREAM_CONTAINER_TYPE: docker
      STREAM_IMAGE_NAME: mconf/mconf-presentation-recorder:latest
      STREAM_BIGBLUEBUTTON_URL: '{{ bbb_api_entry_point | regex_replace("/api") }}'
      STREAM_BIGBLUEBUTTON_SECRET: '{{ bbb_secret }}'
      STREAM_BOT_NAME: 'Streaming'
      SFU_PROCESSES: '{{ sfu_processes | to_json }}'
      CODEC_VIDEO_MAIN: '{{ codec_main }}'
      CODEC_VIDEO_CONTENT: '{{ codec_content }}'
      RECORDING_MEDIA_PROFILE: '{{ recording_profile }}'
      RECORDING_FORMAT: '{{ recording_format }}'
      VIDEO_RNP_BASE_URL: '{{ bigbluebutton_video_rnp_endpoint_hostname }}'
      VIDEO_RNP_CLIENT_ID: '{{ bigbluebutton_video_rnp_client_id }}'
      VIDEO_RNP_CLIENT_SECRET: '{{ bigbluebutton_video_rnp_client_secret }}'
      VIDEO_RNP_REDIRECT_URI: 'https://{{ inventory_hostname }}/oauth2_redirect'
      VIDEO_RNP_HOST_IP: '{{ external_ip }}'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /usr/local/bigbluebutton/bbb-webrtc-sfu/config/client_secret.json:/app/client_secret.json
    labels:
      hostname: '{{ inventory_hostname }}'
  notify: restart docker components

- name: Remove old images
  shell: docker images {{ bigbluebutton_docker_webrtc_sfu_image.split(":")[0] }} --filter 'before={{ bigbluebutton_docker_webrtc_sfu_image }}' -q | xargs -r docker rmi --force
  notify: clean docker

- name: Add webrtc-sfu to nginx
  become: yes
  template:
    src: templates/webrtc-sfu.nginx.j2
    dest: /etc/bigbluebutton/nginx/webrtc-sfu.nginx
  notify: reload nginx
