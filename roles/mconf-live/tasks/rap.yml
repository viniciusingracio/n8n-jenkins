- name: Check if presentation_recorder is installed
  stat:
    path: /usr/local/bigbluebutton/core/scripts/mconf-presentation-recorder.yml
  register: reg_recorder

- name: Adjust mconf-presentation-recorder.yml
  yedit:
    src: /usr/local/bigbluebutton/core/scripts/mconf-presentation-recorder.yml
    edits:
    - { key: 'api_entry_point', value: '{{ mconf_live_recording_auth_entry_point | default(bbb_api_entry_point.stdout, true) }}' }
    - { key: 'api_shared_secret', value: '{{ mconf_live_recording_auth_secret | default(bbb_secret.stdout, true) }}' }
    - { key: 'local_address', value: '{{ mconf_live_recording_auth_local_address | default(ansible_default_ipv4.address, true) }}' }
    - { key: 'simultaneous_meetings', value: '{{ mconf_live_num_presentation_recorders }}' }
    state: present
  become: yes
  when: reg_recorder.stat.exists

- name: Check if presentation_video is installed
  stat:
    path: /usr/local/bigbluebutton/core/scripts/presentation_video.yml
  register: reg_video

- name: Adjust presentation_video.yml
  yedit:
    src: /usr/local/bigbluebutton/core/scripts/presentation_video.yml
    edits:
    - { key: 'audio_offset', value: '2300' }
    state: present
  become: yes
  when: reg_video.stat.exists

- name: List rap scripts enabled
  find:
    paths: /usr/local/bigbluebutton/core/scripts/publish
    patterns: '*.rb'
  register: enabled_formats

- name: Disable extra formats
  command: bbb-record --disable {{ item.path | basename | splitext | first }}
  with_items: '{{ enabled_formats.files }}'
  when: item.path | basename | splitext | first not in mconf_live_enabled_recording_formats
  become: yes

- name: List rap scripts disabled
  find:
    paths: /usr/local/bigbluebutton/core/scripts/publish
    patterns: '*.bk'
  register: disabled_formats

- name: Enable extra formats
  command: bbb-record --enable {{ item.path | basename | splitext | first | splitext | first }}
  with_items: '{{ disabled_formats.files }}'
  when: item.path | basename | splitext | first | splitext | first in mconf_live_enabled_recording_formats
  become: yes

- name: Pull mconf-presentation-recorder
  docker_image:
    name: '{{ mconf_live_presentation_recorder_image }}:{{ mconf_live_presentation_recorder_version }}'
  when: mconf_live_presentation_recorder_enabled

# tag is needed because the ruby script always use latest
- name: Tag presentation recorder image to latest
  command: docker tag {{ mconf_live_presentation_recorder_image }}:{{ mconf_live_presentation_recorder_version }} {{ mconf_live_presentation_recorder_image }}:latest
  when: mconf_live_presentation_recorder_enabled

- name: Add tomcat7 to docker group
  become: true
  user:
    name: 'tomcat7'
    groups: docker
    append: yes
  when: mconf_live_presentation_recorder_enabled
