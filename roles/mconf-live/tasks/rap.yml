- set_fact:
    presentation_video_enabled: '{{ "presentation_video" in mconf_live_enabled_recording_formats }}'

- name: Adjust mconf-presentation-recorder.yml
  yedit:
    src: /usr/local/bigbluebutton/core/scripts/mconf-presentation-recorder.yml
    edits:
      - { key: 'api_entry_point', value: '{{ mconf_live_recording_auth_entry_point | default(bbb_api_entry_point, true) }}' }
      - { key: 'api_shared_secret', value: '{{ mconf_live_recording_auth_secret | default(bbb_secret, true) }}' }
      - { key: 'local_address', value: '{{ mconf_live_recording_auth_local_address | default(ansible_default_ipv4.address, true) }}' }
      - { key: 'simultaneous_meetings', value: '{{ mconf_live_num_presentation_recorders }}' }
    state: present
  become: yes
  when: presentation_video_enabled | bool

- name: Configure video formats
  become: yes
  yedit:
    src: '{{ item }}'
    edits:
      - { key: 'video_formats', value: '{{ mconf_live_video_formats }}' }
    state: present
  with_items:
    - /usr/local/bigbluebutton/core/scripts/presentation.yml
    - /usr/local/bigbluebutton/core/scripts/presentation_video.yml
  ignore_errors: yes

- name: Adjust presentation_video.yml
  yedit:
    src: /usr/local/bigbluebutton/core/scripts/presentation_video.yml
    edits:
    - { key: 'audio_offset', value: '2300' }
    state: present
  become: yes
  when: presentation_video_enabled | bool

- name: List rap scripts enabled
  find:
    paths: /usr/local/bigbluebutton/core/scripts/publish
    patterns: '*.rb'
  register: enabled_formats

- name: Disable extra formats
  command: bbb-record --disable {{ item.path | basename | splitext | first }}
  with_items: '{{ enabled_formats.files }}'
  when: item.path | basename | splitext | first not in mconf_live_enabled_recording_formats
  become: yes

- name: List rap scripts disabled
  find:
    paths: /usr/local/bigbluebutton/core/scripts/publish
    patterns: '*.bk'
  register: disabled_formats

- name: Enable extra formats
  command: bbb-record --enable {{ item.path | basename | splitext | first | splitext | first }}
  with_items: '{{ disabled_formats.files }}'
  when: item.path | basename | splitext | first | splitext | first in mconf_live_enabled_recording_formats
  become: yes

- name: Pull mconf-presentation-recorder
  docker_image:
    name: '{{ mconf_live_presentation_recorder_image }}:{{ mconf_live_presentation_recorder_version }}'
    pull: yes
    source: pull
  when: presentation_video_enabled | bool

- name: Pull nginx
  docker_image:
    name: nginx
    pull: yes
  when: presentation_video_enabled | bool

# tag is needed because the rap script always use latest
# TODO specify on presentation_video the image version
- name: Tag presentation recorder image to latest
  command: docker tag {{ mconf_live_presentation_recorder_image }}:{{ mconf_live_presentation_recorder_version }} {{ mconf_live_presentation_recorder_image }}:latest
  when: presentation_video_enabled | bool

- name: Add bigbluebutton user to docker group
  become: yes
  command: usermod -aG docker {{ bigbluebutton_user }}
  # the following give us an error on ansible
  # user:
  #   name: '{{ bigbluebutton_user }}'
  #   groups: docker
  #   append: yes
  when: presentation_video_enabled | bool
  notify: restart mconf-presentation-recorder

- name: Stop the recorder if presentation_video isn't enabled
  become: yes
  systemd:
    name: '{{ item }}'
    state: stopped
    enabled: no
  with_items:
    - mconf-presentation-recorder.target
    - mconf-presentation-recorder.service
    - mconf-presentation-recorder.timer
  when: not presentation_video_enabled | bool
  ignore_errors: yes

- name: Launch recorder if presentation_video is enabled
  become: yes
  systemd:
    name: mconf-presentation-recorder.timer
    state: restarted
    enabled: true
  when: presentation_video_enabled | bool
  ignore_errors: yes
