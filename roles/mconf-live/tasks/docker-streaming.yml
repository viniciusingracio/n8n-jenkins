---

- name: Pull streaming image
  docker_image:
    name: '{{ mconf_live_presentation_recorder_image }}:{{ mconf_live_presentation_recorder_version }}'
    source: pull
    force_source: yes

- name: Create directory for config files
  become: yes
  file:
    path: /etc/mconf/mconf-streaming-controller
    state: directory
    mode: '0755'

- name: Copy nginx file
  become: yes
  copy:
    src: files/thumbnail-confweb.png
    dest: /etc/mconf/mconf-streaming-controller/thumbnail-confweb.png

- name:
  become: yes
  file:
    path: /etc/mconf/mconf-streaming-controller/client_secret.json
    state: absent

- name:
  become: yes
  copy:
    src: '{{ bigbluebutton_docker_streaming_controller_k8s_local_config_file }}'
    dest: '{{ bigbluebutton_docker_streaming_controller_k8s_config_file }}'

- name: Start streaming-controller container
  docker_container:
    name: streaming-controller
    image: '{{ bigbluebutton_docker_streaming_controller_image }}'
    pull: yes
    restart_policy: always
    memory: 256M
    ports:
      - 8009:8009
    env:
      GOOGLE_CLIENT_ID: '{{ bigbluebutton_streaming_google_client_id | string }}'
      GOOGLE_CLIENT_SECRET: '{{ bigbluebutton_streaming_google_client_secret | string }}'
      GOOGLE_REDIRECT_URI: '{{ bigbluebutton_streaming_google_redirect_uri | string }}'
      KUBECONFIG: '{% if bigbluebutton_docker_streaming_controller_k8s_enabled %}/app/kube-config{% endif %}'
      LOG_FILENAME: /var/log/mconf-streaming-controller/mconf-streaming-controller.log
      LOG_LEVEL: info
      REDIS_HOST: '{{ ansible_docker0.ipv4.address }}'
      SELF_HOSTED_HOST: '{{ inventory_hostname }}'
      STREAM_BIGBLUEBUTTON_SECRET: '{{ bbb_secret }}'
      STREAM_BIGBLUEBUTTON_URL: '{{ bbb_api_entry_point | regex_replace("/api") }}'
      STREAM_BOT_NAME: 'Streaming'
      STREAM_CONTAINER_TYPE: '{% if bigbluebutton_docker_streaming_controller_k8s_enabled %}kubernetes{% else %}docker{% endif %}'
      STREAM_K8S_CONTAINERS: "{{ [ { 'name': bigbluebutton_docker_streaming_controller_k8s_job_name, 'image': bigbluebutton_docker_streaming_controller_k8s_streaming_image } ] | to_json }}"
      STREAM_K8S_IMAGE_PULL_SECRETS: "{{ [ { 'name': bigbluebutton_docker_streaming_controller_k8s_image_pull_secret } ] | to_json }}"
      STREAM_K8S_NAMESPACE: '{{ bigbluebutton_docker_streaming_controller_k8s_namespace }}'
      TZ: '{{ lookup("file", "/etc/timezone") }}'
      VIDEO_RNP_API_HOST: 'https://{{ inventory_hostname }}'
      VIDEO_RNP_BASE_URL: '{{ bigbluebutton_video_rnp_endpoint_hostname }}'
      VIDEO_RNP_CLIENT_ID: '{{ bigbluebutton_video_rnp_client_id | string }}'
      VIDEO_RNP_CLIENT_SECRET: '{{ bigbluebutton_video_rnp_client_secret | string }}'
      VIDEO_RNP_HOST_IP: '{{ external_ipv4 }}'
      VIDEO_RNP_NEW_API: 'false'
      VIDEO_RNP_REDIRECT_URI: 'https://{{ inventory_hostname }}/oauth2_redirect'
    volumes:
      - /var/log/mconf-streaming-controller:/var/log/mconf-streaming-controller
      - /var/run/docker.sock:/var/run/docker.sock
      - '{{ bigbluebutton_docker_streaming_controller_k8s_config_file }}:/app/kube-config'
      - /etc/mconf/mconf-streaming-controller/thumbnail-confweb.png:/app/thumbnail.png
    labels:
      hostname: '{{ inventory_hostname }}'
    state: '{% if bigbluebutton_streaming_enabled %}started{% else %}absent{% endif %}'

- name: Remove old images
  shell: docker images {{ bigbluebutton_docker_streaming_controller_image.split(":")[0] }} --filter 'before={{ bigbluebutton_docker_streaming_controller_image }}' -q | xargs -r docker rmi --force
  notify: clean docker

- name: Copy nginx file
  copy:
    src: files/streaming-controller.nginx
    dest: /etc/bigbluebutton/nginx/streaming-controller.nginx
  become: yes
  notify: reload nginx

# - name: Remove nginx file
#   file:
#     path: /etc/bigbluebutton/nginx/streaming-controller.nginx
#     state: absent
#   become: yes
#   when: not bigbluebutton_allow_transfer
#   notify: reload nginx
