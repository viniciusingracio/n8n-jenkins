- name: Copy dummy package for mconf-mcs-sip to /tmp
  copy:
    src: files/mconf-mcs-sip_1.0_all.deb
    dest: /tmp/mconf-mcs-sip_1.0_all.deb

- name: Install dummy package
  apt:
    deb: /tmp/mconf-mcs-sip_1.0_all.deb
    force: yes
  become: yes

- name: Hold package
  command: apt-mark hold mconf-mcs-sip
  become: yes

- name: Hold package (with aptitude)
  command: aptitude -y hold mconf-mcs-sip
  become: yes

- name: Hold package (with dpkg)
  dpkg_selections:
    name: mconf-mcs-sip
    selection: hold
  become: yes

- set_fact:
    registrar_config: '{{ { "register": true, "registrarServer": { "server": bigbluebutton_sip_registrar_address, "authorizationUser": bigbluebutton_sip_registrar_username, "password": bigbluebutton_sip_registrar_password } } }}'
  when: bigbluebutton_sip_registrar_enabled
- set_fact:
    registrar_config: '{{ { "register": false, "registrarServer": { "server": "", "authorizationUser": "", "password": "" } } }}'
  when: not bigbluebutton_sip_registrar_enabled

- set_fact:
    contact_ip: "{% if bigbluebutton_kurento_use_internal_ip %}{{ ansible_default_ipv4.address }}{% else %}{{ external_ip }}{% endif %}"

- name: Start mcs-sip container
  docker_container:
    name: mcs-sip
    image: '{{ bigbluebutton_docker_mcs_sip_image }}'
    pull: yes
    restart_policy: unless-stopped
    ports:
      - 5060:5060
      - 5060:5060/udp
      - 3012:3012
    env:
      EXTERNAL_IP: '{{ contact_ip }}'
      BIND_IP: 0.0.0.0
      MCS_PORT: "3009"
      MCS_HOST: '{{ docker_ip }}'
      SIP_API_PORT: "3012"
      SIP_API_PATH: /mcs-sip
      ENABLE_EXTERNAL_API: "true"
      REGISTRAR: '{{ registrar_config | to_json }}'
      SIP_DEFAULT_GATEWAY: '{{ bigbluebutton_sip_default_gateway | default(bigbluebutton_sip_registrar_address, true) }}'
      ENABLE_MCS_BFCP: '{{ bigbluebutton_docker_mcs_bfcp_enabled | string }}'
      MCS_BFCP_ADDRESS: 'ws://{{ ansible_default_ipv4.address }}:8000'
      INFO_INTRAFRAME_INTERVAL: '0'
    labels:
      hostname: '{{ inventory_hostname }}'
  notify: restart docker components

- name: Remove old images
  shell: docker images {{ bigbluebutton_docker_mcs_sip_image.split(":")[0] }} --filter 'before={{ bigbluebutton_docker_mcs_sip_image }}' -q | xargs -r docker rmi --force
  notify: clean docker
