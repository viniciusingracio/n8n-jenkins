- name: Install nfs
  become: yes
  apt:
    name: '{{ item }}'
  with_items:
    - nfs-common
    - bindfs

- name: Create directories
  become: yes
  file:
    path: '{{ item }}'
    state: directory
    recurse: yes
  with_items:
    - /mnt/bigbluebutton/published
    - /mnt/bigbluebutton/recording/raw
    - /mnt/bigbluebutton/recording/status/sanity
    - /mnt/bigbluebutton/recording/status/published

- name: Map nfs
  become: yes
  blockinfile:
    dest: /etc/fstab
    block: |
      {{ hostvars[groups['mconf-rec'] | first].nfs_ip }}:/var/bigbluebutton/published                                /mnt/bigbluebutton/published                    nfs4   minorversion=1,_netdev,auto,clientaddr={{ nfs_ip }}  0  0
      {{ hostvars[groups['mconf-rec'] | first].nfs_ip }}:/var/bigbluebutton/recording/raw                            /mnt/bigbluebutton/recording/raw                nfs4   minorversion=1,_netdev,auto,clientaddr={{ nfs_ip }}  0  0
      {{ hostvars[groups['mconf-rec'] | first].nfs_ip }}:/var/bigbluebutton/recording/status/sanity_{{ nfs_name }}   /mnt/bigbluebutton/recording/status/sanity      nfs4   minorversion=1,_netdev,auto,clientaddr={{ nfs_ip }}  0  0
      {{ hostvars[groups['mconf-rec'] | first].nfs_ip }}:/var/bigbluebutton/recording/status/published               /mnt/bigbluebutton/recording/status/published   nfs4   minorversion=1,_netdev,auto,clientaddr={{ nfs_ip }}  0  0
    marker: '# {mark} ANSIBLE MANAGED BLOCK mconf-rec nfs'
  notify: mount all

- name: Test mount
  command: mountpoint -q -- {{ item }}
  register: recordings_mount
  ignore_errors: yes
  with_items:
    - /var/bigbluebutton/published
    - /var/bigbluebutton/recording/raw
    - /var/bigbluebutton/recording/status/sanity
    - /var/bigbluebutton/recording/status/published

# make sure the directories that will be mounted are empty
- name: Remove directory content
  become: yes
  file:
    path: '{{ item.item }}'
    state: absent
  with_items: '{{ recordings_mount.results }}'
  when: item is failed

- name: Re-create directory structure
  become: yes
  file:
    path: '{{ item.item }}'
    state: directory
    owner: tomcat7
    group: tomcat7
  with_items: '{{ recordings_mount.results }}'
  when: item is failed

- stat:
    path: /mnt/bigbluebutton/published
  register: published_dir

- name: Map bindfs
  become: yes
  blockinfile:
    dest: /etc/fstab
    block: |
      bindfs#/mnt/bigbluebutton/published                  /var/bigbluebutton/published                  fuse map={{ published_dir.stat.uid }}/tomcat7:@{{ published_dir.stat.gid }}/@tomcat7 0 0
      bindfs#/mnt/bigbluebutton/recording/raw              /var/bigbluebutton/recording/raw              fuse map={{ published_dir.stat.uid }}/tomcat7:@{{ published_dir.stat.gid }}/@tomcat7 0 0
      bindfs#/mnt/bigbluebutton/recording/status/sanity    /var/bigbluebutton/recording/status/sanity    fuse map={{ published_dir.stat.uid }}/tomcat7:@{{ published_dir.stat.gid }}/@tomcat7 0 0
      bindfs#/mnt/bigbluebutton/recording/status/published /var/bigbluebutton/recording/status/published fuse map={{ published_dir.stat.uid }}/tomcat7:@{{ published_dir.stat.gid }}/@tomcat7 0 0
    marker: '# {mark} ANSIBLE MANAGED BLOCK mconf-rec bindfs'
  notify: mount all
