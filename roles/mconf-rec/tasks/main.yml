- include: facts.yml

- include_role:
    name: mconf-live
  tags: [ mconf-live ]

- name: Disable services not needed
  become: yes
  service:
    name: '{{ item }}'
    state: stopped
    enabled: no
  with_items:
    - red5
    - libreoffice
    - freeswitch
    - kurento-media-server
    - bbb-apps-akka
    - bbb-transcode-akka
    - bbb-fsesl-akka
    - bbb-webrtc-sfu
    - mconf-mcs-sip
    - bbb-html5
  ignore_errors: yes

- name: Make sure status/published exists before trying to mount it
  file:
    path: /var/bigbluebutton/recording/status/published
    state: directory
    owner: bigbluebutton
    group: bigbluebutton
  become: yes

- set_fact:
    nfs_ip: '{{ ansible_default_ipv4.address }}'
  when: nfs_ip is none
- set_fact:
    nfs_name: '{{ inventory_hostname.split(".")[0] }}'
  when: nfs_name is none

- include: server.yml
  when: mconf_rec_share_nfs

- include: client.yml
  when: mconf_rec_mount_nfs

- name: Check if mconf_decrypter is installed
  stat:
    path: /usr/local/bigbluebutton/core/scripts/mconf-decrypter.yml
  register: reg_decrypter
  tags:
    - update-urls

- name: Adjust mconf-presentation-recorder.yml
  yedit:
    src: /usr/local/bigbluebutton/core/scripts/mconf-decrypter.yml
    edits:
    - { key: 'get_recordings_url', value: '{{ mconf_rec_get_recordings_url }}' }
    - { key: 'verify_ssl_certificate', value: '{{ not use_self_signed_certificate | default(true) }}' }
    state: present
  become: yes
  when: reg_decrypter.stat.exists
  tags:
    - update-urls

- name: Install mysql-client
  become: yes
  apt:
    name: mysql-client
  when: mconf_rec_update_decrypter_enabled

- name: Copy script to update mconf-decrypter.yml
  copy:
    src: files/update-mconf-decrypter.rb
    dest: /usr/local/bigbluebutton/core/scripts/utils/update-mconf-decrypter.rb
  become: yes
  when: mconf_rec_update_decrypter_enabled

- name: Create cron job to update mconf-decrypter
  cron:
    name: update decrypter
    minute: 0
    hour: "*/4"
    job: mysql -N -u {{ mconf_rec_update_decrypter_db_user }} -r -p'{{ mconf_rec_update_decrypter_db_password }}' -h {{ mconf_rec_update_decrypter_db_host }} -P {{ mconf_rec_update_decrypter_db_port }} {{ mconf_rec_update_decrypter_db_name }} -e "SELECT CAST(CONVERT(I.name USING utf8) AS BINARY), I.salt FROM Integrations I JOIN RecordingServersIntegrations RSI ON RSI.integrationId = I.id JOIN RecordingServers RS ON RS.id = RSI.recordingServerId JOIN Plans P ON P.id = I.ownerId AND I.ownerType = 'Plan' WHERE (P.expireAt IS NULL OR P.expireAt > now()) AND RS.name = '{{ inventory_hostname }}';" | LC_ALL=en_US.UTF-8 ruby /usr/local/bigbluebutton/core/scripts/utils/update-mconf-decrypter.rb --api-server {{ mconf_rec_update_decrypter_api_server }} --rec-server {{ inventory_hostname }}
    user: root
    state: "{{ mconf_rec_update_decrypter_enabled | ternary('present', 'absent') }}"
  become: yes

- name: Create cron job to remove published done files older than 30 days
  cron:
    name: cleanup published done
    special_time: daily
    job: mkdir -p /var/bigbluebutton/recording/status/old_published && find /var/bigbluebutton/recording/status/published/ -name "*.done" -mtime +30 -exec mv {} /var/bigbluebutton/recording/status/old_published/ \;
    user: root
  become: yes
