- name: Download aws-publisher source code
  git:
    repo: '{{ aws_publisher_repo_url }}'
    dest: ~/src/aws-publisher
    version: '{{ aws_publisher_repo_ref }}'
    accept_hostkey: true
    force: yes
  when: aws_publisher_build_from_source
  register: aws_publisher_code

- name: Build the aws-publisher docker image
  docker_image:
    build_path: ~/src/aws-publisher/labs/bbb-aws-publisher/
    name: '{{ aws_publisher_image }}'
    tag: '{{ aws_publisher_image_version }}'
    force: true
  when: aws_publisher_build_from_source and aws_publisher_code.changed

# it doesn't work to send a symlink to the container, so we need to figure that out
- stat:
    path: /var/bigbluebutton
  register: reg_var_bigbluebutton

- set_fact:
    recordings_dir: '{% if reg_var_bigbluebutton.stat.islnk is defined and reg_var_bigbluebutton.stat.islnk %}{{ reg_var_bigbluebutton.stat.lnk_source }}{% else %}{{ reg_var_bigbluebutton.stat.path }}{% endif %}'

- name: Start the aws-publisher container
  docker_container:
    command: bundle exec ruby s3.rb --watch
    name: mconf-aws-publisher
    image: '{{ aws_publisher_image }}:{{ aws_publisher_image_version }}'
    pull: yes
    restart_policy: always
    volumes:
      - '{{ recordings_dir }}:/var/bigbluebutton'
      - /var/log/bigbluebutton:/var/log/bigbluebutton
    env:
      BBB_AWS_ENDPOINT: '{{ aws_publisher_endpoint | string }}'
      BBB_AWS_REGION: '{{ aws_publisher_region | string }}'
      BBB_AWS_KEY: '{{ aws_publisher_key | string }}'
      BBB_AWS_SECRET: '{{ aws_publisher_secret | string }}'
      BBB_AWS_BUCKET: '{{ aws_publisher_bucket | string }}'
      BBB_AWS_DEBUG: '{{ aws_publisher_debug | string }}'
      BBB_AWS_REMOTE_PLAYBACK: '{{ aws_publisher_remote_playback | string }}'
      BBB_AWS_REMOTE_PLAYBACK_URL: '{{ aws_publisher_remote_playback_url | string }}'
      BBB_AWS_AVAILABLE_FORMATS: '{{ aws_publisher_available_formats | string }}'
      BBB_AWS_KEEP_LOCAL: '{{ aws_publisher_keep_local | string }}'
      BBB_AWS_REDIS_HOST: '{{ ansible_docker0.ipv4.address }}'
      BBB_AWS_FAST_RESYNC: '{{ aws_publisher_fast_resync | string }}'
      BBB_AWS_KEEP_DELETED: '{{ aws_publisher_keep_deleted | string }}'
      BBB_AWS_RESYNC: '0'
    labels:
      hostname: '{{ inventory_hostname }}'

- name: Resync recordings
  docker_container:
    command: bundle exec ruby s3.rb --resync
    name: mconf-aws-publisher-resync
    image: '{{ aws_publisher_image }}:{{ aws_publisher_image_version }}'
    pull: yes
    volumes:
      - '{{ recordings_dir }}:/var/bigbluebutton'
      - /var/log/bigbluebutton:/var/log/bigbluebutton
    env:
      BBB_AWS_ENDPOINT: '{{ aws_publisher_endpoint | string }}'
      BBB_AWS_REGION: '{{ aws_publisher_region | string }}'
      BBB_AWS_KEY: '{{ aws_publisher_key | string }}'
      BBB_AWS_SECRET: '{{ aws_publisher_secret | string }}'
      BBB_AWS_BUCKET: '{{ aws_publisher_bucket | string }}'
      BBB_AWS_DEBUG: '{{ aws_publisher_debug | string }}'
      BBB_AWS_REMOTE_PLAYBACK: '{{ aws_publisher_remote_playback | string }}'
      BBB_AWS_REMOTE_PLAYBACK_URL: '{{ aws_publisher_remote_playback_url | string }}'
      BBB_AWS_AVAILABLE_FORMATS: '{{ aws_publisher_available_formats | string }}'
      BBB_AWS_KEEP_LOCAL: '{{ aws_publisher_keep_local | string }}'
      BBB_AWS_REDIS_HOST: '{{ ansible_docker0.ipv4.address }}'
      BBB_AWS_FAST_RESYNC: '{{ aws_publisher_fast_resync | string }}'
      BBB_AWS_KEEP_DELETED: '{{ aws_publisher_keep_deleted | string }}'
    labels:
      hostname: '{{ inventory_hostname }}'
    state: '{% if aws_publisher_run_resync %}started{% else %}present{% endif %}'
