# TODO: make a module with this?
- name: check if port 80 is used
  become: yes
  shell: netstat -tuln | grep ':80 '
  register: port_80
  failed_when: False # never fail

- name: check ufw status
  become: yes
  command: ufw status verbose
  ignore_errors: yes
  register: ufw_status

- name: determine if firewall is running and blocking port 80
  set_fact:
    firewall_installed: '{{ ufw_status is succeeded }}'
    firewall_running: '{{ ufw_status is succeeded and not ufw_status.stdout is match("Status: inactive") }}'
    firewall_blocking_80: '{{ ufw_status is succeeded and not ufw_status.stdout is search("80/tcp.*ALLOW IN") }}'

- name: concatenate cmd for all domains
  set_fact:
    certbot_all_domains_cmd: "{{ certbot_all_domains | join(' --domain ') }}"

#
# If nothing binding to port 80, use certbot standalone
#

- name: open firewall for certbot
  become: yes
  ufw: rule=allow port=80 proto=tcp
  notify: restart ufw
  when: firewall_blocking_80 # port was not open yet

- name: start the certbot container standalone
  docker_container:
    name: certbot
    image: certbot/certbot
    pull: yes
    command: 'certonly --non-interactive --register-unsafely-without-email --agree-tos --expand --domain {{ certbot_all_domains_cmd }} --standalone --preferred-challenges http'
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt
      - /var/log/letsencrypt:/var/log/letsencrypt
    published_ports:
      - 80:80
    # auto_remove: true # on ansible 2.4
    detach: false
    labels:
      hostname: '{{ certbot_domain }}'
  when: port_80.rc == 1 # port not used


#
# If something already using port 80, try webroot
#

- name: start the certbot container webroot
  docker_container:
    name: certbot
    image: certbot/certbot
    pull: yes
    command: "certonly --non-interactive --register-unsafely-without-email --agree-tos --expand --domain {{ certbot_all_domains_cmd }} --webroot -w {{ certbot_webroot_path }}"
    volumes:
      - "{{ certbot_webroot_path }}:{{ certbot_webroot_path }}" # webroot
      - /etc/letsencrypt:/etc/letsencrypt
      - /var/log/letsencrypt:/var/log/letsencrypt
    # auto_remove: true # on ansible 2.4
    detach: false
    labels:
      hostname: '{{ certbot_domain }}'
  when: port_80.rc == 0


- name: close firewall after certbot standalone
  become: yes
  ufw: rule=allow port=80 proto=tcp delete=true
  notify: restart ufw
  when: firewall_blocking_80 # port was not open before

- include: cron.yml
  tags: [cron]
