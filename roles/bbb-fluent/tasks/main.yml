---

- name: Copy scripts
  synchronize:
    src: files/
    dest: /etc/bbb-fluent/
    use_ssh_args: yes
  become: yes

- name: Start fluentd container
  docker_container:
    name: fluentd
    image: mconf/bbb-fluent:latest
    pull: yes
    restart_policy: unless-stopped
    user: root
    hostname: '{{ inventory_hostname }}'
    memory: 512M
    volumes:
      - /:/host:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/log/td-agent:/var/log/td-agent
    ports:
      - 5044:5044
      - 9880:9880
    env:
      ELASTIC_PATH: "{{ bbb_fluent_elastic_path }}"
      ELASTIC_HOST: "{{ bbb_fluent_elastic_host }}"
      ELASTIC_PORT: "{{ bbb_fluent_elastic_port }}"
      ELASTIC_AUTH_USER: "{{ bbb_fluent_elastic_auth_user }}"
      ELASTIC_AUTH_PASS: "{{ bbb_fluent_elastic_auth_pass }}"
    labels:
      hostname: '{{ inventory_hostname }}'

- name: Start packetbeat container
  docker_container:
    name: packetbeat
    image: elastic/packetbeat:7.5.1
    pull: yes
    restart_policy: unless-stopped
    user: packetbeat
    hostname: '{{ inventory_hostname }}'
    command: -e --strict.perms=false
    memory: 512M
    volumes:
      - /etc/bbb-fluent/packetbeat.yml:/usr/share/packetbeat/packetbeat.yml:ro
      - /var/run/docker.sock:/var/run/docker.sock
    capabilities:
      - NET_RAW
      - NET_ADMIN
    network_mode: host
    labels:
      hostname: '{{ inventory_hostname }}'

- name: Install cron job to generate audio-stats
  become: yes
  cron:
    name: audio-stats to fluentd, sleep {{ item }}
    job: "sleep {{ item }}; /usr/bin/ruby /etc/bbb-fluent/audio-stats.rb | curl -H 'Content-Type: multipart/form-data' -X POST -d @- http://localhost:9880/audio_stats"
  with_items:
    - 30
    - 60

- name: Remove old audio-stats scripts
  cron:
    name: '{{ item }}'
    state: absent
  with_items:
    - enable audio-stats, sleep 30
    - enable audio-stats, sleep 60
  become: yes

- name: Remove old audio-stats scripts
  cron:
    name: '{{ item }}'
    state: absent
  with_items:
    - audio-stats to fluentd, sleep 30
    - audio-stats to fluentd, sleep 60

- name: Check if html5 client reindex file exists
  stat:
    path: /var/log/nginx/html5-client-reindex.log
  register: reg_reindex

- name: Create reindex file
  shell: ruby /etc/bbb-fluent/reindex-client-logs.rb | tee /var/log/nginx/html5-client-reindex.log > /dev/null
  become: yes
  when: not reg_reindex.stat.exists
