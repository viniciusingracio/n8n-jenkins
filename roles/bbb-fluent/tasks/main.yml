---

- name: Create bbb-fluent directory
  file:
    path: /etc/bbb-fluent
    owner: '{{ ansible_user }}'
    group: '{{ ansible_user }}'
    state: directory
  become: yes

- set_fact:
    fluentd_conf: "fluent-elastic-s3.conf"
  when: bbb_fluent_elastic_enabled and bbb_fluent_s3_enabled
- set_fact:
    fluentd_conf: "fluent-elastic.conf"
  when: bbb_fluent_elastic_enabled and ! bbb_fluent_s3_enabled

- name: Start fluentd container
  docker_container:
    name: fluentd
    image: '{{ bbb_fluent_image_version }}'
    pull: yes
    restart_policy: unless-stopped
    user: root
    hostname: '{{ inventory_hostname }}'
    memory: 512M
    volumes:
      - /:/host:ro
      - /var/lib/docker/containers/:/var/lib/docker/containers/:ro
      - /var/log/td-agent:/var/log/td-agent
      - /var/log/fluent:/var/log/fluent
    ports:
      - 5044:5044
      - 9880:9880
      - 24231:24231
    env:
      TZ: '{{ lookup("file", "/etc/timezone") }}'
      FLUENTD_ELASTIC_ENABLED: "{{ bbb_fluent_elastic_enabled | string }}"
      FLUENTD_ELASTIC_SCHEME: "{{ bbb_fluent_elastic_scheme | string }}"
      FLUENTD_ELASTIC_PATH: "{{ bbb_fluent_elastic_path | string }}"
      FLUENTD_ELASTIC_HOST: "{{ bbb_fluent_elastic_host | string }}"
      FLUENTD_ELASTIC_PORT: "{{ bbb_fluent_elastic_port | string }}"
      FLUENTD_ELASTIC_AUTH_USER: "{{ bbb_fluent_elastic_auth_user | string }}"
      FLUENTD_ELASTIC_AUTH_PASS: "{{ bbb_fluent_elastic_auth_pass | string }}"
      FLUENTD_ELASTIC_REAL_TIME_UPDATES: "false"
      FLUENTD_S3_ENABLED: "{{ bbb_fluent_s3_enabled | string }}"
      FLUENTD_S3_KEY_ID: "{{ bbb_fluent_s3_key_id | string }}"
      FLUENTD_S3_SECRET_KEY: "{{ bbb_fluent_s3_secret_key | string }}"
      FLUENTD_S3_ENDPOINT: "{{ bbb_fluent_s3_endpoint | string }}"
      FLUENTD_S3_BUCKET_NAME: "{{ bbb_fluent_s3_bucket_name | string }}"
      FLUENTD_S3_REGION: "{{ bbb_fluent_s3_region | string }}"
      FLUENTD_S3_FORCE_PATH_STYLE: "{{ bbb_fluent_s3_force_path_style | string | lower }}"
      FLUENTD_S3_UPLOAD_TIME_KEY: "{{ ( 3600 * 24 ) | string }}"
      FLUENTD_S3_UPLOAD_WAIT: "60s"
      FLUENTD_CONF: '{{ fluentd_conf }}'
    labels:
      hostname: '{{ inventory_hostname }}'
  when: fluentd_conf is defined
  notify: clean docker
  tags:
    - docker

- name: Remove old images
  shell: docker images {{ bbb_fluent_image_version.split(":")[0] }} --filter 'before={{ bbb_fluent_image_version }}' -q | xargs -r docker rmi --force
  notify: clean docker

- name: Copy files from the container
  shell: docker exec fluentd cat /fluentd/utils/{{ item }} > /etc/bbb-fluent/{{ item }}
  with_items:
    - packetbeat.yml
    - audio-stats.rb
  notify: restart packetbeat

- name: Start packetbeat container
  docker_container:
    name: packetbeat
    image: elastic/packetbeat:7.5.1
    pull: yes
    restart_policy: unless-stopped
    user: packetbeat
    hostname: '{{ inventory_hostname }}'
    command: -e --strict.perms=false
    memory: 512M
    volumes:
      - /etc/bbb-fluent/packetbeat.yml:/usr/share/packetbeat/packetbeat.yml:ro
      - /var/run/docker.sock:/var/run/docker.sock
    capabilities:
      - NET_RAW
      - NET_ADMIN
    network_mode: host
    labels:
      hostname: '{{ inventory_hostname }}'
  notify: clean docker

- name: Install cron job to generate audio-stats
  become: yes
  cron:
    name: audio-stats to fluentd, sleep {{ item }}
    job: sleep {{ item }}; /usr/bin/ruby /etc/bbb-fluent/audio-stats.rb
  with_items:
    - 30
    - 60

- name: Remove old audio-stats scripts
  cron:
    name: '{{ item }}'
    state: absent
  with_items:
    - enable audio-stats, sleep 30
    - enable audio-stats, sleep 60
  become: yes

- name: Remove old audio-stats scripts
  cron:
    name: '{{ item }}'
    state: absent
  with_items:
    - audio-stats to fluentd, sleep 30
    - audio-stats to fluentd, sleep 60
