---

- name: Create reindex files
  file:
    path: '{{ item }}'
    state: touch
  with_items:
    - /var/log/nginx/html5-client-reindex.log
    - /var/log/bigbluebutton/audio-stats-reindex.log
  become: yes

- name: Create bbb-fluent directory
  file:
    path: /etc/bbb-fluent
    owner: '{{ ansible_user }}'
    group: '{{ ansible_user }}'
    state: directory
  become: yes

- name: Start fluentd container
  docker_container:
    name: fluentd
    image: mconf/bbb-fluent:latest
    command: -c /fluentd/etc/fluent-light.conf
    pull: yes
    restart_policy: unless-stopped
    user: root
    hostname: '{{ inventory_hostname }}'
    memory: 512M
    volumes:
      - /:/host:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/log/td-agent:/var/log/td-agent
    ports:
      - 5044:5044
      - 9880:9880
      - 24231:24231
    env:
      TZ: '{{ lookup("file", "/etc/timezone") }}'
      ELASTIC_PATH: "{{ bbb_fluent_elastic_path | string }}"
      ELASTIC_HOST: "{{ bbb_fluent_elastic_host | string }}"
      ELASTIC_PORT: "{{ bbb_fluent_elastic_port | string }}"
      ELASTIC_AUTH_USER: "{{ bbb_fluent_elastic_auth_user | string }}"
      ELASTIC_AUTH_PASS: "{{ bbb_fluent_elastic_auth_pass | string }}"
      READ_LOGS_FROM_HEAD: "false"
      REAL_TIME_SUMMARY_UPDATES: "true"
      FLUENTD_CONF: "fluent-light.conf"
    labels:
      hostname: '{{ inventory_hostname }}'
  notify: clean docker

- name: Copy files from the container
  shell: docker exec fluentd cat /fluentd/utils/{{ item }} > /etc/bbb-fluent/{{ item }}
  with_items:
    - packetbeat.yml
    - audio-stats.rb
  notify: restart packetbeat

- name: Start packetbeat container
  docker_container:
    name: packetbeat
    image: elastic/packetbeat:7.5.1
    pull: yes
    restart_policy: unless-stopped
    user: packetbeat
    hostname: '{{ inventory_hostname }}'
    command: -e --strict.perms=false
    memory: 512M
    volumes:
      - /etc/bbb-fluent/packetbeat.yml:/usr/share/packetbeat/packetbeat.yml:ro
      - /var/run/docker.sock:/var/run/docker.sock
    capabilities:
      - NET_RAW
      - NET_ADMIN
    network_mode: host
    labels:
      hostname: '{{ inventory_hostname }}'
  notify: clean docker

- name: Install cron job to generate audio-stats
  become: yes
  cron:
    name: audio-stats to fluentd, sleep {{ item }}
    job: sleep {{ item }}; /usr/bin/ruby /etc/bbb-fluent/audio-stats.rb
  with_items:
    - 30
    - 60

- name: Remove old audio-stats scripts
  cron:
    name: '{{ item }}'
    state: absent
  with_items:
    - enable audio-stats, sleep 30
    - enable audio-stats, sleep 60
  become: yes

- name: Remove old audio-stats scripts
  cron:
    name: '{{ item }}'
    state: absent
  with_items:
    - audio-stats to fluentd, sleep 30
    - audio-stats to fluentd, sleep 60
