- set_fact:
    # enable_freeswitch_ipv6: '{{ not external_ipv6 is none }}'
    # disable configs for ipv6 on freeswitch
    enable_freeswitch_ipv6: false

- include: freeswitch-nginx.yml

- name: Determine wss_binding value
  set_fact:
    ws_binding_value: '{% if ansible_default_ipv4.address == external_ipv4 %}:5066{% else %}{{ external_ipv4 }}:5066{% endif %}'

- name: Define FreeSWITCH external SIP port
  set_fact:
    freeswitch_sip_port: '{% if bigbluebutton_sip %}5062{% else %}5060{% endif %}'

- name: Modify FreeSWITCH SIP port
  xml:
    path: /opt/freeswitch/conf/vars.xml
    xpath: '{{ item.xpath }}'
    attribute: '{{ item.attribute }}'
    value: '{{ item.value }}'
  with_items:
    - { xpath: '//X-PRE-PROCESS[@cmd="set" and starts-with(@data, "external_sip_port=")]', attribute: 'data', value: 'external_sip_port={{ freeswitch_sip_port }}' }
  become: yes
  register: modify_sip_port

- name: Restart FreeSWITCH
  become: yes
  systemd:
    name: freeswitch
    state: restarted
  when: modify_sip_port is changed

- name: Modify FreeSWITCH vars.xml
  xml:
    path: /opt/freeswitch/conf/vars.xml
    xpath: '{{ item.xpath }}'
    attribute: '{{ item.attribute }}'
    value: '{{ item.value }}'
  with_items:
    - { xpath: '//X-PRE-PROCESS[@cmd="set" and starts-with(@data, "external_rtp_ip=")]', attribute: 'data', value: 'external_rtp_ip={{ external_ipv4 }}' }
    - { xpath: '//X-PRE-PROCESS[@cmd="set" and starts-with(@data, "external_sip_ip=")]', attribute: 'data', value: 'external_sip_ip={{ external_ipv4 }}' }
    - { xpath: '//X-PRE-PROCESS[@cmd="set" and starts-with(@data, "sound_prefix=")]', attribute: 'data', value: 'sound_prefix={{ bigbluebutton_sounds_prefix }}' }
    - { xpath: '//X-PRE-PROCESS[@cmd="set" and starts-with(@data, "local_ip_v4=")]', attribute: 'data', value: 'local_ip_v4={{ ansible_default_ipv4.address }}' }
    - { xpath: '//X-PRE-PROCESS[@cmd="set" and starts-with(@data, "rtp_liberal_dtmf=")]', attribute: 'data', value: 'rtp_liberal_dtmf=true' }
    - { xpath: '//X-PRE-PROCESS[@cmd="set" and starts-with(@data, "global_codec_prefs=")]', attribute: 'data', value: 'global_codec_prefs=OPUS,speex@16000h@20i,speex@8000h@20i,G722,PCMU,PCMA' }
    - { xpath: '//X-PRE-PROCESS[@cmd="set" and starts-with(@data, "outbound_codec_prefs=")]', attribute: 'data', value: 'outbound_codec_prefs=OPUS,speex@16000h@20i,speex@8000h@20i,G722,PCMU,PCMA' }
  become: yes
  notify: restart bigbluebutton

- name: Determine properties to modify external.xml
  set_fact:
    external_props:
      - { name: "ext-rtp-ip", value: '$${external_rtp_ip}' }
      - { name: "ext-sip-ip", value: '$${external_sip_ip}' }
      - { name: "disable-rtp-auto-adjust" }
      - { name: "rtp-autofix-timing" }
      - { name: "ws-binding", value: "{{ ws_binding_value }}" }
      - { name: "apply-candidate-acl", value: "0.0.0.0/0" }
      - { name: "dtmf_type" }
      - { name: "dtmf-type" }
      - { name: "rtp-timeout-sec", value: "30" } # default is 300

- name: Read external_props
  xml:
    path: /opt/freeswitch/conf/sip_profiles/external.xml
    xpath: '/profile/settings/param[@name="{{ item.name }}"]'
    content: attribute
  with_items: '{{ external_props }}'
  register: external_props_read
  ignore_errors: yes
  become: yes

- name: Add external_prop if it doesn't exist
  xml:
    path: /opt/freeswitch/conf/sip_profiles/external.xml
    xpath: /profile/settings
    add_children:
      - param:
          name: '{{ item.item.name }}'
          value: '{{ item.item.value }}'
    pretty_print: yes
  with_items: '{{ external_props_read.results }}'
  when: item is failed and item.item.value is defined
  become: yes
  notify: restart bigbluebutton

- name: Modify external_prop if it exists
  xml:
    path: /opt/freeswitch/conf/sip_profiles/external.xml
    xpath: '/profile/settings/param[@name="{{ item.item.name }}"]'
    attribute: value
    value: '{{ item.item.value }}'
  with_items: '{{ external_props_read.results }}'
  when: item is succeeded and item.item.value is defined
  become: yes
  notify: restart bigbluebutton

- name: Remove external_prop if it shouldn't exist
  xml:
    path: /opt/freeswitch/conf/sip_profiles/external.xml
    xpath: '/profile/settings/param[@name="{{ item.item.name }}"]'
    state: absent
  with_items: '{{ external_props_read.results }}'
  when: item is succeeded and item.item.value is undefined
  become: yes
  notify: restart bigbluebutton

- name: Modify external_sip_port on bbb-voice
  lineinfile:
    dest: /usr/share/red5/webapps/sip/WEB-INF/bigbluebutton-sip.properties
    state: present
    regexp: ^freeswitch\.port=
    line: 'freeswitch.port={{ freeswitch_sip_port }}'
  become: yes
  when: not bigbluebutton_html5_only|bool
  notify: restart bigbluebutton

- name: Read rtp range attributes attribute
  xml:
    path: /opt/freeswitch/conf/autoload_configs/switch.conf.xml
    xpath: '{{ item.xpath }}'
    content: attribute
    attribute: value
  with_items:
    - { xpath: '/configuration/settings/param[@name="rtp-start-port"]', name: 'rtp-start-port', value: '{{ bigbluebutton_freeswitch_udp_range_begin }}' }
    - { xpath: '/configuration/settings/param[@name="rtp-end-port"]', name: 'rtp-end-port', value: '{{ bigbluebutton_freeswitch_udp_range_end }}' }
  register: hits
  ignore_errors: yes
  become: yes

- name: Modify rtp range if it exists
  xml:
    path: /opt/freeswitch/conf/autoload_configs/switch.conf.xml
    xpath: '{{ item.item.xpath }}'
    attribute: value
    value: '{{ item.item.value }}'
  with_items: '{{ hits.results }}'
  become: yes
  when: item is succeeded
  notify: restart bigbluebutton

- name: Add rtp range if it doesn't exist
  xml:
    path: /opt/freeswitch/conf/autoload_configs/switch.conf.xml
    xpath: '/configuration/settings'
    add_children:
      - param:
          name: '{{ item.item.name }}'
          value: '{{ item.item.value }}'
    pretty_print: yes
  with_items: '{{ hits.results }}'
  become: yes
  when: item is failed
  notify: restart bigbluebutton

- name: Remove IPv6 configuration from FreeSWITCH profiles
  become: yes
  command: mv {{ item }} {{ item }}_
  args:
    creates: '{{ item }}_'
    removes: '{{ item }}'
  with_items:
    - /opt/freeswitch/etc/freeswitch/sip_profiles/internal-ipv6.xml
    - /opt/freeswitch/etc/freeswitch/sip_profiles/external-ipv6.xml
  when: not enable_freeswitch_ipv6
  notify: restart bigbluebutton

- name: Restore IPv6 configuration from FreeSWITCH profiles
  become: yes
  command: mv {{ item }}_ {{ item }}
  args:
    creates: '{{ item }}'
    removes: '{{ item }}_'
  with_items:
    - /opt/freeswitch/etc/freeswitch/sip_profiles/internal-ipv6.xml
    - /opt/freeswitch/etc/freeswitch/sip_profiles/external-ipv6.xml
  when: enable_freeswitch_ipv6
  notify: restart bigbluebutton

- name: Determine properties to modify event_socket.conf.xml
  set_fact:
    esl_props:
      - { name: "listen-ip", value: "0.0.0.0" }
      - { name: "apply-inbound-acl", value: "0.0.0.0/0" }

- name: Read esl_props
  xml:
    path: /opt/freeswitch/etc/freeswitch/autoload_configs/event_socket.conf.xml
    xpath: '/configuration/settings/param[@name="{{ item.name }}"]'
    content: attribute
    attribute: value
  with_items: '{{ esl_props }}'
  register: esl_props_read
  ignore_errors: yes
  become: yes

- name: Add esl_prop if it doesn't exist
  xml:
    path: /opt/freeswitch/etc/freeswitch/autoload_configs/event_socket.conf.xml
    xpath: /configuration/settings
    add_children:
      - param:
          name: '{{ item.item.name }}'
          value: '{{ item.item.value }}'
    pretty_print: yes
  with_items: '{{ esl_props_read.results }}'
  when: item is failed
  become: yes
  notify: restart bigbluebutton

- name: Modify esl_props if it exists
  xml:
    path: /opt/freeswitch/etc/freeswitch/autoload_configs/event_socket.conf.xml
    xpath: '/configuration/settings/param[@name="{{ item.item.name }}"]'
    attribute: value
    value: '{{ item.item.value }}'
  with_items: '{{ esl_props_read.results }}'
  when: item is succeeded
  become: yes
  notify: restart bigbluebutton

- name: Copy opus.conf
  become: yes
  copy:
    src: files/opus.conf.xml
    dest: /opt/freeswitch/conf/autoload_configs/opus.conf.xml
  notify: restart bigbluebutton

- include: sounds.yml
- include: freeswitch-ipv6.yml
  when: enable_freeswitch_ipv6

- name: Reset energy level
  xml:
    path: /opt/freeswitch/etc/freeswitch/autoload_configs/conference.conf.xml
    xpath: /configuration/profiles/profile[@name='cdquality']/param[@name='{{ item.param }}']
    attribute: value
    value: '{{ item.value }}'
  with_items:
    - { param: 'energy-level', value: '{{ bigbluebutton_freeswitch_energy_level | string }}' }
    - { param: 'video-auto-floor-msec', value: '2500' }
  become: yes
  notify: restart bigbluebutton
