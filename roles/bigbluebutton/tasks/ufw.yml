- name: Configure ufw rules for BigBlueButton
  become: true
  ufw: rule={{ item.rule }} port={{ item.port }} proto={{ item.proto }}
  with_items:
    - { rule: 'allow', port: 80, proto: 'tcp' }
    - { rule: 'allow', port: 443, proto: 'tcp' }
    - { rule: 'allow', port: 1935, proto: 'tcp' }
    - { rule: 'allow', port: '{{ [bigbluebutton_freeswitch_udp_range_begin, bigbluebutton_kms_udp_range_begin] | min }}:{{ [bigbluebutton_freeswitch_udp_range_end, bigbluebutton_kms_udp_range_end] | max }}', proto: 'udp' }
  notify:
    - restart ufw

- name: Configure ufw rules for SIP
  become: true
  ufw: rule={{ item.rule }} port={{ item.port }} proto={{ item.proto }}
  with_items:
    - { rule: 'allow', port: 5060, proto: 'tcp' }
    - { rule: 'allow', port: 5060, proto: 'udp' }
  notify:
    - restart ufw
  when: bigbluebutton_sip

# TODO configure zabbix source
- name: Configure ufw rules for Zabbix
  become: true
  ufw: rule={{ item.rule }} port={{ item.port }} proto={{ item.proto }}
  with_items:
    - { rule: 'allow', port: 10050, proto: 'tcp' }
  notify:
    - restart ufw
  when: zabbix_agent_enabled

# TODO make interface configurable
- name: Configure ufw rules for redis on BigBlueButton
  become: true
  ufw: rule=allow port=6379 proto=tcp direction=in interface=docker0
  notify:
    - restart ufw
  when: bigbluebutton_redis_bind

- name: Modify sysctl
  become: true
  replace:
    path: /etc/ufw/sysctl.conf
    regexp: '^[#]?({{ item.name }})=.*'
    replace: \1={{ item.value }}
  with_items: "{{ bigbluebutton_sysctl }}"
  register: reboot_required_raw

- set_fact:
    reboot_required: '{{ reboot_required | default(false) or reboot_required_raw is changed }}'
