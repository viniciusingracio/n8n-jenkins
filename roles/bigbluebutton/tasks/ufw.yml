- name: Configure ufw rules for BigBlueButton
  become: yes
  ufw: rule={{ item.rule }} port={{ item.port }} proto={{ item.proto }}
  with_items:
    - { rule: 'allow', port: 80, proto: 'tcp' }
    - { rule: 'allow', port: 443, proto: 'tcp' }
    - { rule: 'allow', port: 1935, proto: 'tcp', delete: '{{ bigbluebutton_html5_only|bool }}' }
    - { rule: 'allow', port: '{{ [bigbluebutton_freeswitch_udp_range_begin, bigbluebutton_kms_udp_range_begin] | min }}:{{ [bigbluebutton_freeswitch_udp_range_end, bigbluebutton_kms_udp_range_end] | max }}', proto: 'udp' }
  notify:
    - restart ufw

- name: Configure ufw rules for SIP
  become: yes
  ufw: rule={{ item[0].rule }} port={{ item[0].port }} proto={{ item[0].proto }} from_ip={{ item[1] }} delete={{ item[0].delete }}
  with_nested:
    -
      - { rule: 'allow', port: 5060, proto: 'tcp', delete: 'yes' }
      - { rule: 'allow', port: 5060, proto: 'udp', delete: 'yes' }
    - '{{ bigbluebutton_sip_sources }}'
  notify:
    - restart ufw

- name: Configure ufw rules for SIP
  become: yes
  command: ufw route allow proto {{ item[0].proto }} from {{ item[1] }} to any port {{ item[0].port }}
  with_nested:
    -
      - { port: 5060, proto: 'tcp' }
      - { port: 5060, proto: 'udp' }
    - '{{ bigbluebutton_sip_sources }}'
  when: bigbluebutton_sip
  notify:
    - restart ufw

# TODO configure zabbix source
- name: Configure ufw rules for Zabbix
  become: yes
  ufw: rule={{ item.rule }} port={{ item.port }} proto={{ item.proto }} delete={{ item.delete }}
  with_items:
    - { rule: 'allow', port: 10050, proto: 'tcp', delete: '{{ not zabbix_agent_enabled }}' }
  notify:
    - restart ufw

- name: Remove ufw rule specific for redis from docker
  become: yes
  ufw: rule=allow port=6379 proto=tcp direction=in interface=docker0 delete=yes
  notify:
    - restart ufw

- name: Allow all traffic from the docker interface
  become: yes
  ufw: rule=allow direction=in interface=docker0
  notify:
    - restart ufw

- name: Modify sysctl
  become: yes
  replace:
    path: '{{ item[0] }}'
    regexp: '^[#]?({{ item[1].name }})=.*'
    replace: \1={{ item[1].value }}
  with_nested:
    -
      - /etc/ufw/sysctl.conf
      - /etc/sysctl.conf
    - '{{ bigbluebutton_sysctl }}'
  register: reboot_required_raw

- set_fact:
    reboot_required: '{{ reboot_required | default(false) or reboot_required_raw is changed }}'
