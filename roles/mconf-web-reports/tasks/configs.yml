---

- name: Create the config directory
  become: yes
  file:
    path: '{{ mconf_web_reports_remote_config_dir }}'
    state: directory
    owner: 'root'
    group: 'root'
    mode: 0600
    recurse: yes

- name: Copy env file with the variables to run the container
  become: yes
  copy:
    src: '{{ mconf_web_reports_env_file }}'
    dest: '{{ mconf_web_reports_remote_env_path }}'
    owner: 'root'
    group: 'root'
    mode: 0600

- name: Copy config file
  become: yes
  copy:
    src: '{{ mconf_web_reports_config_file }}'
    dest: '{{ mconf_web_reports_remote_config_path }}'
    owner: 'root'
    group: 'root'
    mode: 0600

- name: Create the .aws directory
  become: yes
  file:
    path: '{{ mconf_web_reports_s3_config_dir }}'
    state: directory
    owner: 'root'
    group: 'root'
    mode: 0600
  when: mconf_web_reports_s3_upload_enabled

- name: Create the .aws/credentials file
  become: yes
  template:
    src: 'aws-credentials.j2'
    dest: '{{ mconf_web_reports_s3_config_dir }}/credentials'
    owner: 'root'
    group: 'root'
    mode: 0600
  when: mconf_web_reports_s3_upload_enabled

- name: Set the S3 upload command
  set_fact:
    mconf_web_reports_s3_run_cmd: 'docker run --rm -v {{ mconf_web_reports_s3_config_dir }}:/root/.aws -v {{ mconf_web_reports_output_dir }}:/tmp/reports:ro amazon/aws-cli:{{ mconf_web_reports_s3_aws_cli_version }} s3 sync --no-follow-symlinks --acl private --endpoint {{ mconf_web_reports_s3_endpoint }} /tmp/reports s3://{{ mconf_web_reports_s3_bucket }}'
  when: mconf_web_reports_s3_upload_enabled

- name: Create the run.sh file
  become: yes
  template:
    src: 'run.sh.j2'
    dest: '{{ mconf_web_reports_remote_config_dir }}/run.sh'
    owner: 'root'
    group: 'root'
    mode: 0700

- name: Create the run-previous.sh file
  become: yes
  template:
    src: 'run-previous.sh.j2'
    dest: '{{ mconf_web_reports_remote_config_dir }}/run-previous.sh'
    owner: 'root'
    group: 'root'
    mode: 0700
