- name: Add publishTo on build.sbt
  blockinfile:
    dest: '{{ ansible_env.HOME }}/dev/bigbluebutton/{{ item }}/build.sbt'
    block: |
      publishTo := Some(Resolver.file("file",  new File(Path.userHome.absolutePath+"/.m2/repository")))
    marker: '// {mark} ANSIBLE MANAGED BLOCK - bbb-dev'
    create: yes 
  with_items:
    - bbb-common-message
    - bbb-fsesl-client
    - bbb-common-web

- name: Compile akka libraries
  shell: |
    sbt clean
    sbt compile
    sbt publish
    sbt publishLocal
  args:
    chdir: '{{ ansible_env.HOME }}/dev/bigbluebutton/{{ item }}'
  environment:
    PATH: '{{ ansible_env.HOME }}/dev/tools/sbt/bin:{{ ansible_env.PATH }}'
  with_items:
    - bbb-common-message
    - bbb-fsesl-client
    - bbb-common-web

- name: Get BigBlueButton secret
  shell: bbb-conf --secret | tr -s ' ' | grep '^ Secret:' | cut -d' ' -f3
  register: bbb_secret

- name: Get BigBlueButton URL
  shell: bbb-conf --secret | tr -s ' ' | grep '^ URL:' | cut -d' ' -f3
  register: bbb_url

- name: Configure akka apps
  lineinfile:
    dest: '{{ ansible_env.HOME }}/dev/bigbluebutton/akka-bbb-apps/src/main/resources/application.conf'
    state: present
    regexp: '{{ item.regexp }}'
    line: '{{ item.line }}'
  with_items:
    - { regexp: 'bbbWebAPI[ ]*=', line: '  bbbWebAPI = "{{ bbb_url.stdout }}api"' }
    - { regexp: 'sharedSecret[ ]*=', line: '  sharedSecret = "{{ bbb_secret.stdout }}"' }
    - { regexp: 'deskshareip[ ]*=', line: '  deskshareip = "{{ inventory_hostname }}"' }

- name: Compile akka apps
  shell: |
    sbt clean
    sbt compile
    sbt debian:packageBin
  args:
    chdir: '{{ ansible_env.HOME }}/dev/bigbluebutton/{{ item }}'
  environment:
    PATH: '{{ ansible_env.HOME }}/dev/tools/sbt/bin:{{ ansible_env.PATH }}'
  with_items:
    - akka-bbb-apps
    - akka-bbb-fsesl
    - akka-bbb-transcode

- name: Install akka apps
  shell: |
    dpkg -i target/*.deb
  become: yes
  args:
    chdir: '{{ ansible_env.HOME }}/dev/bigbluebutton/{{ item }}'
  environment:
    PATH: '{{ ansible_env.HOME }}/dev/tools/sbt/bin:{{ ansible_env.PATH }}'
  with_items:
    - akka-bbb-apps
    - akka-bbb-fsesl
    - akka-bbb-transcode

- name: Compile and deploy screenshare
  shell: |
    sbt clean
    sbt compile
    sbt package
    rm -rf /usr/share/red5/webapps/screenshare
    cp -r target/webapp /usr/share/red5/webapps/screenshare
    find /usr/share/red5/webapps/screenshare/WEB-INF/lib/ -type f \
      -not -name bbb-screenshare-akka_* \
      -not -name scala-library-* \
      -not -name scala-reflect-* \
      -not -name jackson-* \
      -not -name paranamer-* \
      -not -name akka-* \
      -not -name config-* \
      -not -name gson-* \
      -not -name jedis-*.jar \
      -not -name commons-pool* \
      -not -name spring-webmvc-* \
      -not -name rediscala_* \
      -not -name bbb-common-message* \
      -exec rm -vf {} \;
    mkdir -p /usr/share/red5/webapps/screenshare/lib
    cp -r jws/lib/* /usr/share/red5/webapps/screenshare/lib/
    cp jws/screenshare.jnlp /usr/share/red5/webapps/screenshare/
  args:
    chdir: '{{ ansible_env.HOME }}/dev/bigbluebutton/{{ item }}'
  environment:
    PATH: '{{ ansible_env.HOME }}/dev/tools/sbt/bin:{{ ansible_env.PATH }}'
  with_items:
    - bbb-screenshare/app
