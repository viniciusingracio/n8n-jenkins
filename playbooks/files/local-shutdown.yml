---

- hosts: localhost
  # gather_facts: no
  tasks:
    # - shell: echo 900 | ruby -e "require 'date'; puts Time.now - File.mtime('/var/run/no_meetings') > gets.chomp.to_i"
    #   register: reg_start_presentation
    #
    # - fail:
    #     msg: 'Timezone not properly set, current timezone: {{ ansible_date_time | tz }}'
    #   when: ansible_date_time.tz != "-03"
    #
    # - set_fact:
    #     time_to_sleep: '{{ ansible_date_time.hour | int >= 20 or ansible_date_time.hour | int <= 6 }}'
    #
    # - fail:
    #     msg: 'Not sleep time'
    #   when: not time_to_sleep
    #
    # - debug:
    #     msg: 'Current hour: {{ ansible_date_time.hour }}. Is now between 8:00PM and 6:00AM? {{ time_to_sleep }}'

    - name: Grep from Prometheus metrics how many meetings are running
      shell: 'grep "^[[:space:]]*bbb_meetings_total [[:digit:]]*$" /usr/local/share/prometheus/bbb-api-exporter.prom | tr -s " " | cut -d" " -f3'
      register: reg_meetings_running

    - name: Fail if grep doesn't return anything
      fail:
        msg: Grep meetings running didn't succeed
      when: ( reg_meetings_running.stdout_lines | default([]) ) | length <= 0

    - name: Define meetings_running
      set_fact:
        meetings_running: '{{ reg_meetings_running.stdout }}'

    - debug:
        msg: 'Meetings running: {{ meetings_running }}'

    - name: Retrieve information on no_meetings file
      stat:
        path: '/var/run/no_meetings'
      register: reg_no_meetings_file

    - debug:
        msg: '/var/run/no_meetings exists? {{ reg_no_meetings_file.stat.exists }}'

    - name: Define age of no_meetings file
      set_fact:
        no_meetings_file_seconds: '{{ ansible_date_time.epoch | int - reg_no_meetings_file.stat.mtime | int }}'
      when: reg_no_meetings_file.stat.exists

    - debug:
        msg: '/var/run/no_meetings created {{ no_meetings_file_seconds }} seconds ago'
      when: reg_no_meetings_file.stat.exists

    - name: Determine if it's time to shutdown
      set_fact:
        ready_to_shutdown: '{{ meetings_running | int == 0 and no_meetings_file_seconds is defined and no_meetings_file_seconds | int > 900 }}'

    - debug:
        msg: 'Time to shutdown? {{ ready_to_shutdown }}'

    - name: Create no_meetings file
      file:
        path: '/var/run/no_meetings'
        state: touch
      when: meetings_running | int == 0 and not reg_no_meetings_file.stat.exists
      become: yes

    - name: Remove no_meetings file
      file:
        path: '/var/run/no_meetings'
        state: absent
      when: ready_to_shutdown or ( meetings_running | int > 0 and reg_no_meetings_file.stat.exists )
      become: yes

    # - name: Remove shutdown cron job so tomorrow it won't run
    #   cron:
    #     name: "Shutdown if I can"
    #     state: absent
    #   become: yes
    #   when: ready_to_shutdown

    - name: Bye!
      command: /sbin/shutdown -h now
      become: yes
      when: ready_to_shutdown
