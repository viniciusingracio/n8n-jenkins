---

# run with:
# ansible-playbook -vv --extra-vars '{ "digitalocean_token": "XXX", "certbot_all_domains": [ "*.d.elos.vc" ] }' playbooks/certbot-wildcard-certificate.yml

# and then:
# sudo su
# mkdir -p envs/prod/com/files/elos.vc/ envs/prod/com-staging/files/elos.dev/
# cp -L /etc/letsencrypt/live/elos.vc/* envs/prod/com/files/elos.vc/
# cp -L /etc/letsencrypt/live/elos.dev/* envs/prod/com-staging/files/elos.dev/
# exit
# sudo chown -R $USER:$USER envs/prod/com/files/elos.vc envs/prod/com-staging/files/elos.dev

- hosts: localhost
  vars:
    certbot_all_domains: []
  tasks:
  - fail:
      msg: "No domain defined"
    when: certbot_all_domains|length == 0

  - file:
      path: '{{ ansible_env.HOME }}/.secrets/certbot'
      state: directory

  - template:
      src: templates/digitalocean.ini.j2
      dest: '{{ ansible_env.HOME }}/.secrets/certbot/digitalocean.ini'

  - name: concatenate cmd for all domains
    set_fact:
      certbot_all_domains_cmd: "{{ certbot_all_domains | join(' --domain ') }}"

  - name: start the certbot container standalone
    docker_container:
      name: certbot
      image: certbot/dns-digitalocean
      pull: yes
      command: certonly --non-interactive --email felipe@mconf.com --agree-tos --server https://acme-v02.api.letsencrypt.org/directory --expand --domain {{ certbot_all_domains_cmd }} --dns-digitalocean --dns-digitalocean-credentials /root/digitalocean.ini
      volumes:
        - /etc/letsencrypt:/etc/letsencrypt
        - /var/log/letsencrypt:/var/log/letsencrypt
        - '{{ ansible_env.HOME }}/.secrets/certbot/digitalocean.ini:/root/digitalocean.ini'
      detach: false
